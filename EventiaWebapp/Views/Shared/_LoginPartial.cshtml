@using Microsoft.AspNetCore.Identity
@using EventiaWebapp.Models

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<style> 
    .nav-item {
        margin: 0 1rem;
    }
</style>

@if (SignInManager.IsSignedIn(User))
{

    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="" asp-controller="Event" asp-action="MyEvents">My Events</a>
    </li>

    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserAsync(User).Result.FirstName</a>
    </li>
    @if (User.IsInRole("Organizer"))
    {
        <li class="nav-item">
            <a class="nav-link text-dark btn btn-success" asp-area="" asp-controller="Event" asp-action="MyEvents">Organize Event</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark btn btn-success" asp-area="" asp-controller="Event" asp-action="MyEvents">Add Event</a>
        </li>
    }
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Event", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}

